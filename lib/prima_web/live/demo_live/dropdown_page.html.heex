<div class="prose prose-slate">
  <div class="border-b border-gray-200 mb-6">
    <h1>Dropdown</h1>
  </div>

  <p>
    An interactive menu component with keyboard navigation and customizable positioning. Dropdowns provide
    flexible menu interfaces with full accessibility support, including arrow key navigation, automatic focus management,
    and click-outside-to-close behavior.
  </p>

  <h2>Quick Start</h2>
  <p>
    The most basic dropdown requires three components: <code>.dropdown</code>, <code>.dropdown_trigger</code>, and
    <code>.dropdown_menu</code>
    with <code>.dropdown_item</code>
    elements.
  </p>

  <div class="not-prose bg-white border border-gray-200 rounded-lg p-6 my-6">
    <.dropdown_demo />
  </div>

  <Prima.CodeBlock.code_block file="dropdown/basic_dropdown.heex" />

  <p>
    The dropdown component automatically handles opening/closing, keyboard navigation, and focus management. Click the trigger or use Enter/Space to open, then navigate with arrow keys.
  </p>

  <h2>Disabled Items</h2>
  <p>
    Dropdown items can be disabled using the <code>disabled={true}</code>
    attribute. Disabled items cannot be focused via keyboard navigation, and do not close the menu when clicked. They remain accessible to screen readers following ARIA accessibility standards.
  </p>

  <div class="not-prose bg-white border border-gray-200 rounded-lg p-6 my-6">
    <.disabled_dropdown_demo />
  </div>

  <Prima.CodeBlock.code_block file="dropdown/disabled_dropdown.heex" />

  <p>
    Disabled items use <code>aria-disabled="true"</code>
    and <code>data-disabled="true"</code>
    attributes for accessibility and styling. Use the <code>data-disabled:</code>
    variant to style disabled items differently, such as reducing opacity or changing text color.
  </p>

  <h2>Styling</h2>

  <h3>Highlighting Active Items</h3>
  <p>
    Use the <code>data-focus</code>
    data attribute selector to style dropdown items based on their focus state. The
    <code>data-focus:</code>
    variant applies when an item has focus (via keyboard navigation or hover), responding to keyboard navigation and hover states.
  </p>

  <div class="not-prose bg-white border border-gray-200 rounded-lg p-6 my-6">
    <.styled_dropdown_demo />
  </div>

  <p>
    Items without focus use their default styling, while items with the <code>data-focus</code>
    attribute get the enhanced styling. This creates a clear visual indication of the currently focused item without requiring separate styles for unfocused states.
  </p>

  <Prima.CodeBlock.code_block file="dropdown/styled_dropdown.heex" />

  <p>
    You can customize the focused state styling by modifying the <code>data-focus:</code>
    classes. Common patterns include background color changes, text color variations, and subtle animations to enhance the user experience.
  </p>

  <h3>Menu Positioning</h3>
  <p>
    Control dropdown positioning using standard CSS positioning classes. The component supports various alignment options and automatically handles menu overflow.
  </p>

  <div class="not-prose bg-white border border-gray-200 rounded-lg p-6 my-6">
    <.positioned_dropdown_demo />
  </div>

  <p>
    Use classes like <code>origin-top-left</code>, <code>origin-top-right</code>, or
    <code>origin-bottom-left</code>
    to control the transform origin for smooth animations. Combine with <code>left-0</code>, <code>right-0</code>, or other positioning utilities as needed.
  </p>

  <Prima.CodeBlock.code_block file="dropdown/positioned_dropdown.heex" />
</div>
